=============================================================================
List of generated methods in project: DFT_3FASES

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "TI1"       (bean TimerInt)

Module "Bit1"      (bean BitIO)
   - Bit1_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "AD1"       (bean ADC)
   - AD1_Enable -Enables A/D converter bean. <Events> may be generated (<DisableEvent>/<EnableEvent>). If possible, this method 
                switches on A/D converter device, voltage reference, etc.
   - AD1_Disable -Disables A/D converter bean. No <events> will be generated. If possible, this method switches off A/D 
                converter device, voltage reference, etc.
   - AD1_EnableEvent -Enables the <events>.
   - AD1_DisableEvent -Disables the <events>.
   - AD1_Measure -This method performs one measurement on all channels that are set in the bean inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD1_MeasureChan -This method performs measurement on one channel. (Note: If the <number of conversions> is more than one 
                the conversion of the A/D channel is performed specified number of times.)
   - AD1_GetValue -Returns the last measured values for all channels. Format and width of the value is a native format of the 
                A/D converter.
   - AD1_GetChanValue -Returns the last measured value of the required channel. Format and width of the value is a native 
                format of the A/D converter.
   - AD1_GetValue8 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 8 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD1_GetChanValue8 -This method returns the last measured value of required channel justified to the left. Compared with 
                <GetChanValue> method this method returns more accurate result if the <number of conversions> is greater than 1 
                and <AD resolution> is less than 8 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD1_GetValue16 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD1_GetChanValue16 -This method returns the last measured value of the required channel justified to the left. Compared 
                with <GetChanValue> method this method returns more accurate result if the <number of conversions> is greater 
                than 1 and <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is 
                eliminated.

Module "Bit2"      (bean BitIO)
   - Bit2_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "AS1"       (bean AsynchroSerial)
   - AS1_Enable -Enables the bean - it starts the send and receive functions. Events may be generated 
                ("DisableEvent"/"EnableEvent").
   - AS1_Disable -Disables the bean - it stops the send and receive functions. No events will be generated.
   - AS1_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because the preferred 
                method to handle error and break exception in the interrupt mode is to use events <OnError> and <OnBreak> the 
                return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the information about an 
                exception in interrupt mode is returned only if there is a valid character ready to be read. Version specific 
                information for Freescale 56800 derivatives ]   DMA mode:  If DMA controller is available on the selected CPU 
                and the receiver is configured to use DMA controller then this method only sets the selected DMA channel. Then 
                the status of the DMA transfer can be checked using GetCharsInRxBuf method. See an example of a typical usage 
                for details about the communication using DMA.
   - AS1_SendChar -Sends one character to the channel. If the bean is temporarily disabled (Disable method) SendChar method 
                only stores data into an output buffer. In case of a zero output buffer size, only one character can be stored. 
                Enabling the bean (Enable method) starts the transmission of the stored data. This method is available only if 
                the transmitter property is enabled.  Version specific information for Freescale 56800 derivatives ]   DMA mode:
                If DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method only sets selected DMA channel. Then the status of the DMA transfer can be checked using 
                GetCharsInTxBuf method. See an example of a typical usage for details about communication using DMA.
   - AS1_GetCharsInRxBuf -Returns the number of characters in the input buffer. This method is available only if the receiver 
                property is enabled. Version specific information for Freescale 56800 derivatives ]   DMA mode:  If DMA 
                controller is available on the selected CPU and the receiver is configured to use DMA controller then this 
                method returns the number of characters in the receive buffer.
   - AS1_GetCharsInTxBuf -Returns the number of characters in the output buffer. This method is available only if the 
                transmitter property is enabled. Version specific information for Freescale 56800 derivatives ]   DMA mode:  If 
                DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method returns the number of characters in the transmit buffer.

Module "Bit3"      (bean BitIO)
   - Bit3_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations).
   - Bit3_PutVal -The specified output value is set. If the direction is [input], the bean saves the value to a memory or a 
                register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - Bit3_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - Bit3_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.
   - Bit3_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "REELE_GEN" (bean BitIO)
   - REELE_GEN_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations).
   - REELE_GEN_PutVal -The specified output value is set. If the direction is [input], the bean saves the value to a memory or 
                a register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - REELE_GEN_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - REELE_GEN_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.
   - REELE_GEN_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.

Module "REELE_CFE" (bean BitIO)
   - REELE_CFE_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations).
   - REELE_CFE_PutVal -The specified output value is set. If the direction is [input], the bean saves the value to a memory or 
                a register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - REELE_CFE_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - REELE_CFE_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.
   - REELE_CFE_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.

Module "Parp_EDOs" (bean TimerInt)

Module "Cpu"       (bean MCF51QE128_64)
   - Cpu_EnableInt -Enables maskable interrupts
   - Cpu_DisableInt -Disables maskable interrupts

===================================================================================
